@use 'sass:math';

$width-percent-max: 100;
$width-percent-increment: 0.5;
$width-percent-start: 0;

$width-max-px: 1000;
$width-increment-px: 1;
$width-start-px: 0;

@mixin widthPxGen($prefix, $val) {
  .#{$prefix}pxw-#{$val} { width: #{$val}px; }
}

@mixin widthPercentGen($prefix, $number, $decimal, $val) {
  @if($decimal > 0 and $decimal < 10) {
    .#{$prefix}w-#{$number}p#{$decimal} { width: percentage($val / 100); }
    .#{$prefix}vw-#{$number}p#{$decimal} { width: #{$val}vw; }
  } @else if($decimal == 10) {
    .#{$prefix}w-#{$number + 1} { width: percentage($val / 100); }
    .#{$prefix}vw-#{$number + 1} { width: #{$val}vw; }
  } @else {
    .#{$prefix}w-0 { width: 0; }
    .#{$prefix}vw-0 { width: 0; }
  }
}

@mixin widthPercent($prefix) {
  @while($width-percent-start <= $width-percent-max) {
    $decimal: $width-percent-start * 10 % 10;
    $number: math.floor($width-percent-start);

    @include widthPercentGen($prefix, $number, $decimal, $width-percent-start);
    $width-percent-start: $width-percent-start + $width-percent-increment;
  }
}

@mixin widthPx($prefix) {
  @while($width-start-px <= $width-max-px) {
    @include widthPxGen($prefix, $width-start-px);
    $width-start-px: $width-start-px + $width-increment-px;
  }
}
