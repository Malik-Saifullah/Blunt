@use 'sass:string';

$margin-max: 20;
$margin-number: 0;
$margin-decimal: 0;
$margin-decimal-inc: 1;

@mixin marginGen($prefix, $number, $decimal) {
  @if($decimal > 0) {
    .#{$prefix}mt-#{$number}p#{$decimal} { margin-top: string.unquote("#{$number}.#{$decimal}vh"); }
    .#{$prefix}mb-#{$number}p#{$decimal} { margin-bottom: string.unquote("#{$number}.#{$decimal}vh"); }
    .#{$prefix}ml-#{$number}p#{$decimal} { margin-left: string.unquote("#{$number}.#{$decimal}vw"); }
    .#{$prefix}mr-#{$number}p#{$decimal} { margin-right: string.unquote("#{$number}.#{$decimal}vw"); }
    .#{$prefix}m-#{$number}p#{$decimal} { margin: string.unquote("#{$number}.#{$decimal}rem"); }
  } @else {
    .#{$prefix}mt-#{$number} { margin-top: #{$number}vh; }
    .#{$prefix}mb-#{$number} { margin-bottom: #{$number}vh; }
    .#{$prefix}ml-#{$number} { margin-left: #{$number}vw; }
    .#{$prefix}mr-#{$number} { margin-right: #{$number}vw; }
    .#{$prefix}m-#{$number} { margin: #{$number}rem; }
  }
}

@mixin margin($prefix) {
  @while($margin-number <= $margin-max) {
    @include marginGen($prefix, $margin-number, $margin-decimal);
    @while($margin-decimal < 10 and $margin-decimal-inc > 0) {
      $margin-decimal: $margin-decimal + $margin-decimal-inc;
      @if($margin-decimal != 10) {
        @include marginGen($prefix, $margin-number, $margin-decimal);
      }
    }

    $margin-number: $margin-number + 1;
  }
}
